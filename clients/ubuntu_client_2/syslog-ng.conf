@version: 3.35
@include "scl.conf"

options {
   time_reopen (10);
   keep_hostname (yes);
   chain_hostnames (no);
   stats_freq (0);
   bad_hostname ("^(unknown|localhost)$");
   use_dns(no);              # Prevents DNS resolution delays
   dns-cache(no);
   log_fifo_size(1000000);   # Prevents log loss under high load
};

# Define log sources (Capture system logs, internal logs, audit logs, and shell history)
source s_local {
    system(log-iw-size(1000000));
    internal(log-iw-size(1000000));
    wildcard-file(
		base-dir("/var/log")
		filename-pattern("*.log")
		recursive(no)
		follow-freq(60) 
		log_iw_size(1000000)
		max-files(500)
	);
};

# Capture shell history files for all users (Requires a script to tail these files)
source s_bash_history {
    wildcard-file(
        base-dir("/home")
        filename-pattern(".bash_history")
        follow-freq(60)
        log-iw-size(1000000)
        flags(no-parse)
        max-files(500)
    );

    file(
        "/root/.bash_history"
        follow-freq(60)
        log-iw-size(1000000)
        flags(no-parse)
    );

    wildcard-file(
        base-dir("/home")
        filename-pattern(".zsh_history")
        follow-freq(60)
        log-iw-size(1000000)
        flags(no-parse)
        max-files(500)
    );

    file(
        "/root/.zsh_history"
        follow-freq(60)
        log-iw-size(1000000)
        flags(no-parse)
    );
};


# Filters to separate logs by category
filter f_syslog { facility(user) or facility(syslog); };
filter f_auth { facility(auth) or facility(authpriv); };
filter f_ssh { program("sshd"); };
filter f_kernel { facility(kern); };
filter f_daemon { facility(daemon); };
filter f_local { facility(local0) or facility(local1) or facility(local2) or facility(local3) or facility(local4) or facility(local5) or facility(local6) or facility(local7); };

# Remote Destinations (Send logs to Centralized Server)
destination d_remote_syslog_tcp { tcp("centralized_log_server" port(514)); };
# destination d_remote_syslog_udp { udp("centralized_log_server" port(514)); };
destination d_remote_auth_tcp { tcp("centralized_log_server" port(515)); };
# destination d_remote_auth_udp { udp("centralized_log_server" port(515)); };
destination d_remote_ssh_tcp { tcp("centralized_log_server" port(516)); };
# destination d_remote_ssh_udp { udp("centralized_log_server" port(516)); };
destination d_remote_kernel_tcp { tcp("centralized_log_server" port(517)); };
# destination d_remote_kernel_udp { udp("centralized_log_server" port(517)); };
destination d_remote_daemon_tcp { tcp("centralized_log_server" port(518)); };
# destination d_remote_daemon_udp { udp("centralized_log_server" port(519)); };
destination d_remote_bash_history_tcp { tcp("centralized_log_server" port(519)); };
# destination d_remote_bash_history_udp { udp("centralized_log_server" port(521)); };

# Log Paths (Only Remote Logging)
log { source(s_local); filter(f_syslog); destination(d_remote_syslog_tcp); flags(flow-control); };
log { source(s_local); filter(f_auth); destination(d_remote_auth_tcp); flags(flow-control); };
log { source(s_local); filter(f_ssh); destination(d_remote_ssh_tcp); flags(flow-control); };
log { source(s_local); filter(f_kernel); destination(d_remote_kernel_tcp); flags(flow-control); };
log { source(s_local); filter(f_daemon); destination(d_remote_daemon_tcp); flags(flow-control); };
log { source(s_local); filter(f_local); destination(d_remote_syslog_tcp); flags(flow-control); };
log { source(s_bash_history); destination(d_remote_bash_history_tcp); flags(flow-control); };
