@version: 4.8
@include "scl.conf"

options {
    time_reopen (10);
    keep_hostname (yes);
    log_msg_size (8192);
    log_fifo_size (100000);
};

# Accept logs from clients over TCP and UDP
source s_local {
    udp(ip(0.0.0.0) port(513) flags(no-multi-line));
    tcp(ip(0.0.0.0) port(513) flags(no-multi-line));
};

source s_syslog {
    udp(ip(0.0.0.0) port(514) flags(no-multi-line));
    tcp(ip(0.0.0.0) port(514) flags(no-multi-line));
};

source s_auth {
    udp(ip(0.0.0.0) port(515) flags(no-multi-line));
    tcp(ip(0.0.0.0) port(515) flags(no-multi-line));
};

source s_ssh {
    udp(ip(0.0.0.0) port(516) flags(no-multi-line));
    tcp(ip(0.0.0.0) port(516) flags(no-multi-line));
};

source s_kernel {
    udp(ip(0.0.0.0) port(517) flags(no-multi-line));
    tcp(ip(0.0.0.0) port(517) flags(no-multi-line));
};

source s_daemon {
    udp(ip(0.0.0.0) port(518) flags(no-multi-line));
    tcp(ip(0.0.0.0) port(518) flags(no-multi-line));
};

source s_auditd {
    udp(ip(0.0.0.0) port(519) flags(no-multi-line));
    tcp(ip(0.0.0.0) port(519) flags(no-multi-line));
};

# Destination files
destination d_local { file("/var/log/syslog-ng/local.log" fsync(no)); };
destination d_syslog { file("/var/log/syslog-ng/syslog.log" fsync(no)); };
destination d_auth { file("/var/log/syslog-ng/auth.log" fsync(no)); };
destination d_ssh { file("/var/log/syslog-ng/ssh.log" fsync(no)); };
destination d_kernel { file("/var/log/syslog-ng/kernel.log" fsync(no)); };
destination d_daemon { file("/var/log/syslog-ng/daemon.log" fsync(no)); };
destination d_auditd { file("/var/log/syslog-ng/auditd.log" fsync(no)); };

# Log Paths (Routing received logs to appropriate destinations)
log { source(s_local); destination(d_local); };
log { source(s_syslog); destination(d_syslog); };
log { source(s_auth); destination(d_auth); };
log { source(s_ssh); destination(d_ssh); };
log { source(s_kernel); destination(d_kernel); };
log { source(s_daemon); destination(d_daemon); };
log { source(s_auditd); destination(d_auditd); };
